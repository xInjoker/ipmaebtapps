
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read roles and branches
    match /roles/{roleId} {
      allow get: if request.auth != null;
    }
     match /roles/{roleId} {
      allow list: if request.auth != null;
    }

    match /branches/{branchId} {
      allow get: if request.auth != null;
    }
     match /branches/{branchId} {
      allow list: if request.auth != null;
    }

    // Allow users to read their own profile
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow any authenticated user to list users for now
    match /users/{userId} {
        allow list: if request.auth != null;
    }
    
    // Allow any authenticated user to create a user document
    // This should be tightened in a real production app.
    match /users/{userId} {
        allow create: if request.auth != null;
    }

    // Allow any authenticated user to read/write all other collections
    // This is for simplicity during development.
    // In production, you MUST define more granular rules for each collection.
    match /projects/{projectId} {
        allow read, write: if request.auth != null;
    }
    match /equipment/{equipmentId} {
        allow read, write: if request.auth != null;
    }
     match /inspectors/{inspectorId} {
        allow read, write: if request.auth != null;
    }
     match /reports/{reportId} {
        allow read, write: if request.auth != null;
    }
     match /tenders/{tenderId} {
        allow read, write: if request.auth != null;
    }
     match /trips/{tripId} {
        allow read, write: if request.auth != null;
    }
  }
}
