rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role from the user's document in Firestore
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Users can read their own profile, admins can read any
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Admins can read/write all user documents
    match /users/{document=**} {
      allow read, write: if isAdmin();
    }

    // Anyone can read branches (for sign-up page)
    match /branches/{branchId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Authenticated users can read roles, admins can write
    match /roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Generic rule for other collections (e.g., projects, tenders)
    // allowing access only to authenticated users.
    match /{document=**} {
       allow read, write: if request.auth != null;
    }
  }
}
